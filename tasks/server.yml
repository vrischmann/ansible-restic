- name: Create the config directory
  ansible.builtin.file:
    dest: "{{ restic_conf_directory }}"
    owner: root
    group: root
    mode: "0700"
    state: directory

- name: Add the service
  ansible.builtin.template:
    src: server/restic-backup.service.j2
    dest: "/etc/systemd/system/restic-backup-{{ item.name }}.service"
    owner: root
    group: root
    mode: "0644"
  with_items: "{{ restic_backups }}"

- name: Add the timer
  ansible.builtin.template:
    src: restic-backup.timer.j2
    dest: "/etc/systemd/system/restic-backup-{{ item.name }}.timer"
    owner: root
    group: root
    mode: "0644"
  with_items: "{{ restic_backups }}"

- name: Create the environment file
  ansible.builtin.template:
    src: env.j2
    dest: "{{ restic_conf_directory }}/{{ item.name }}.env"
    owner: root
    group: root
    mode: "0600"
  with_items: "{{ restic_backups }}"

- name: Create the files file
  ansible.builtin.template:
    src: files.j2
    dest: "{{ restic_conf_directory }}/{{ item.name }}.files"
    owner: root
    group: root
    mode: "0600"
  with_items: "{{ restic_backups }}"

- name: Create the excludes file
  ansible.builtin.template:
    src: excludes.j2
    dest: "{{ restic_conf_directory }}/{{ item.name }}.excludes"
    owner: root
    group: root
    mode: "0600"
  with_items: "{{ restic_backups }}"

- name: Create the backup wrapper script
  ansible.builtin.copy:
    src: restic-backup-wrapper.py
    dest: "/usr/local/bin/restic-backup-wrapper.py"
    owner: root
    group: root
    mode: "0755"

# NOTE(vincent): do _not_ start the service here or it will just execute the backup !

- name: Enable the service
  ansible.builtin.systemd:
    daemon_reload: true
    name: "restic-backup-{{ item.name }}"
    enabled: true
  with_items: "{{ restic_backups }}"

- name: Enable the service timers
  ansible.builtin.systemd:
    daemon_reload: true
    name: "restic-backup-{{ item.name }}.timer"
    enabled: true
    state: started
  with_items: "{{ restic_backups }}"
